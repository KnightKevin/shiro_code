[main]

# 设置会话
sessionManager=org.apache.shiro.session.mgt.DefaultSessionManager
sessionManager.globalSessionTimeout=1800000
securityManager.sessionManager=$sessionManager

# 设置PasswordService
passwordService=org.apache.shiro.authc.credential.DefaultPasswordService

# 因为PasswordService可能需要设置hashService,hashFormat,hashFormat,下面的设置也是默认设置，你不写也没问题，这里写出来
# 是为了让自己加深理解
hashService=org.apache.shiro.crypto.hash.DefaultHashService
hashFormat=org.apache.shiro.crypto.hash.format.Shiro1CryptFormat
hashFormatFactory=org.apache.shiro.crypto.hash.format.DefaultHashFormatFactory

passwordService.hashService=$hashService
passwordService.hashFormat=$hashFormat
passwordService.hashFormatFactory=$hashFormatFactory

# 创建一个匹配器,因为myRealm间接继承了AuthenticatingRealm，在调用getAuthenticationInfo的方法时会使用credentialsMatcher
# 来验证凭据是否匹配
passwordMatcher=org.apache.shiro.authc.credential.PasswordMatcher
passwordMatcher.passwordService=$passwordService

credentialsMatcher=org.apache.shiro.authc.credential.HashedCredentialsMatcher
credentialsMatcher.hashAlgorithmName=md5
credentialsMatcher.hashIterations=2
credentialsMatcher.storedCredentialsHexEncoded=true

myRealm=com.simon.shiro.shiro.MyRealm

# 注入一个PasswordService
myRealm.passwordService=$passwordService

# 注入一个HashedCredentialsMatcher
myRealm.credentialsMatcher=$credentialsMatcher

securityManager.realms=$myRealm

[users]
zhang=$shiro1$SHA-512$1$$PJkJr+wlNU1VHa4hWQuybjjVPyFzuNPcPu5MBH56scHri4UQPjvnumE7MbtcnDYhTcnxSkL9ei/bhIVrylxEwg==,role1
wang=123

[roles]
role1=user:create,user:update
role2=user:create